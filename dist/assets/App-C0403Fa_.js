import{r as g,l as P,o as _,m as M}from"./shortcuts-Bdqo3K1J.js";const B=["INPUT","TEXTAREA"],X=()=>{const l=g.useRef("insert"),L=g.useRef({start:0,end:0}),h=g.useRef(void 0),[k,E]=g.useState({}),j=e=>e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement?e:null,T=(e,r)=>{let t=0,n=0,a=0;const s=e.value.split(`
`);for(let d=0;d<s.length;d++){const i=s[d].length+1;if(t+i>r){n=d,a=r-t;break}t+=i}return{lines:s,charCount:t,currentLine:n,col:a}},I=async(e,r)=>{var w,A,S;let{start:t,end:n}=L.current;const{length:a}=e.value;l.current==="normal"&&(t=e.selectionStart||0,n=t+1);const{lines:s,charCount:d,currentLine:i,col:f}=T(e,t),{currentLine:p}=T(e,n);if(l.current==="normal"&&!M(r,k.normal_mode)){if(r.key==="h"&&f&&(t--,n=t+1),r.key==="l"&&f!==s[i].length-1&&(t++,n=t+1),r.key==="j"&&i+1<s.length){const o=s[i+1].length,c=d+s[i].length+1;if(o){const v=f>=o?f-o+1:0;t=c+f-v}else t=c;n=t+1}if(r.key==="k"&&i>0){const o=s[i-1].length,c=d-(s[i-1].length+1);if(o){const v=f>=o?f-o+1:0;t=c+f-v}else t=c;n=t+1}if(r.key==="o"&&e.tagName==="TEXTAREA"){const o=e.value.indexOf(`
`,t);t=o===-1?a:o,e.value=[e.value.slice(0,t),e.value.slice(t,a)].join(`
`),t=n=t+1,l.current="insert"}if(r.key==="O"&&e.tagName==="TEXTAREA"){const o=e.value.lastIndexOf(`
`,t-1);t=o===-1?0:o,e.value=[e.value.slice(0,t),e.value.slice(t,a)].join(`
`),t=n=t+(t?1:0),l.current="insert"}if(r.key==="p"){const o=await navigator.clipboard.readText();if(o){const c=s[i].length===0?t:n;e.value=[e.value.slice(0,c),e.value.slice(c,a)].join(o),t=t+o.length,n=t+1}}if(r.key==="P"){const o=await navigator.clipboard.readText();o&&(e.value=[e.value.slice(0,t),e.value.slice(t,a)].join(o),t=t+o.length-1,n=t+1)}s[i].length&&f===s[i].length&&(t=t-1,n=t+1)}if(l.current==="visual"&&h.current){const{start:o,end:c,currentLine:v}=h.current,y=n-t===1,O=y?t<=o:t<o,b=y?n>=c:n>c,D=t===0&&o===0,N=n===a&&c===a,C=s[i].length+1,R=s[p].length+1,m=u=>Math.max(0,Math.min(u,a));if(r.key==="h"&&(t>0?O?t--:n--:D&&n!==1&&!y&&n--),r.key==="l"&&(n<a?b?n++:t++:N&&t!==a-1&&!y&&t++),r.key==="j"){const u=i+1<s.length,x=i>=v;u&&x?n=m(n+C):(t=t+C,t>n&&(t=o,n=a))}if(r.key==="k"){const u=p>0,x=p<=v;u&&x?t=m(t-R):(n=n-R,n<t&&(t=0,n=c))}if(r.key==="p"||r.key==="P"){const u=await navigator.clipboard.readText();u&&(e.setRangeText(u),t=t+u.length-1,n=t+1,l.current="normal")}if(r.key==="y"){const u=(w=window.getSelection())==null?void 0:w.toString();u&&(navigator.clipboard.writeText(u),l.current="normal",t=o,n=c)}}r.key==="i"&&(n=t),r.key==="I"&&(t=n=e.value.lastIndexOf(`
`,t)+1),r.key==="a"&&(t=n),r.key==="A"&&(t=n=e.value.indexOf(`
`,t)),["i","I","a","A"].includes(r.key)&&(l.current="insert"),r.key==="v"&&(l.current==="normal"?(l.current="visual",h.current={start:t,end:n,currentLine:i}):(l.current="normal",t=((A=h.current)==null?void 0:A.start)||t,n=((S=h.current)==null?void 0:S.end)||n,h.current=void 0)),L.current={start:t,end:n},e.setSelectionRange(t,n)};return g.useEffect(()=>{P().then(E),_(E)},[]),g.useEffect(()=>{const e=r=>{const t=document.activeElement,n=j(t);n&&B.includes(n.tagName)&&(k.normal_mode&&M(r,k.normal_mode)&&(l.current="normal"),["normal","visual"].includes(l.current)&&(I(n,r),r.preventDefault()))};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[k]),null};export{X as A};
