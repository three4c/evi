import{r as d,l as b,o as M,m as N}from"./shortcuts-Bdqo3K1J.js";const O=["INPUT","TEXTAREA"],D=()=>{const l=d.useRef("insert"),E=d.useRef({start:0,end:0}),h=d.useRef(void 0),[y,p]=d.useState({}),S=e=>e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement?e:null,x=(e,i)=>{let t=0,n=0,c=0;const o=e.value.split(`
`);for(let g=0;g<o.length;g++){const s=o[g].length+1;if(t+s>i){n=g,c=i-t;break}t+=s}return{lines:o,charCount:t,currentLine:n,col:c}},A=async(e,i)=>{var L,T,w;let{start:t,end:n}=E.current;const{length:c}=e.value;l.current==="normal"&&(t=e.selectionStart||0,n=t+1);const{lines:o,charCount:g,currentLine:s,col:f}=x(e,t);if(l.current==="normal"){if(i.key==="h"&&f&&(t--,n=t+1),i.key==="l"&&f!==o[s].length-1&&(t++,n=t+1),i.key==="j"&&s+1<o.length){const r=o[s+1].length,a=g+o[s].length+1;if(r){const v=f>=r?f-r+1:0;t=a+f-v}else t=a;n=t+1}if(i.key==="k"&&s>0){const r=o[s-1].length,a=g-(o[s-1].length+1);if(r){const v=f>=r?f-r+1:0;t=a+f-v}else t=a;n=t+1}if(i.key==="o"&&e.tagName==="TEXTAREA"){const r=e.value.indexOf(`
`,t);t=r===-1?c:r,e.value=[e.value.slice(0,t),e.value.slice(t,c)].join(`
`),t=n=t+1,l.current="insert"}if(i.key==="O"&&e.tagName==="TEXTAREA"){const r=e.value.lastIndexOf(`
`,t-1);t=r===-1?0:r,e.value=[e.value.slice(0,t),e.value.slice(t,c)].join(`
`),t=n=t+(t?1:0),l.current="insert"}if(i.key==="p"){const r=await navigator.clipboard.readText();if(r){const a=o[s].length===0?t:n;e.value=[e.value.slice(0,a),e.value.slice(a,c)].join(r),t=t+r.length,n=t+1}}if(i.key==="P"){const r=await navigator.clipboard.readText();r&&(e.value=[e.value.slice(0,t),e.value.slice(t,c)].join(r),t=t+r.length-1,n=t+1)}o[s].length&&f===o[s].length&&(t=t-1,n=t+1)}if(l.current==="visual"&&h.current){const{start:r,end:a,currentLine:v}=h.current,k=n-t===1,R=k?t<=r:t<r,C=k?n>=a:n>a,j=t===0&&r===0,m=n===c&&a===c;if(i.key==="h"&&(t>0?R?t--:n--:j&&n!==1&&!k&&n--),i.key==="l"&&(n<c?C?n++:t++:m&&t!==c-1&&!k&&t++),i.key==="j"&&(s+1<o.length&&s>=v?(n=n+o[s].length+1,n>c&&(n=c)):(t=t+o[s].length+1,t>n&&(t=r,n=c))),i.key==="k"){const{currentLine:u}=x(e,n);u>0&&u<=v?(t=t-o[u].length-1,t<0&&(t=0)):(n=n-o[u].length-1,n<t&&(t=0,n=a))}if(i.key==="p"||i.key==="P"){const u=await navigator.clipboard.readText();u&&(e.setRangeText(u),t=t+u.length-1,n=t+1,l.current="normal")}if(i.key==="y"){const u=(L=window.getSelection())==null?void 0:L.toString();u&&(navigator.clipboard.writeText(u),l.current="normal",t=r,n=a)}}i.key==="i"&&(n=t),i.key==="a"&&(t=n),["i","a"].includes(i.key)&&(l.current="insert"),i.key==="v"&&(l.current==="normal"?(l.current="visual",h.current={start:t,end:n,currentLine:s}):(l.current="normal",t=((T=h.current)==null?void 0:T.start)||t,n=((w=h.current)==null?void 0:w.end)||n,h.current=void 0)),E.current={start:t,end:n},e.setSelectionRange(t,n)};return d.useEffect(()=>{b().then(p),M(p)},[]),d.useEffect(()=>{const e=i=>{const t=document.activeElement,n=S(t);n&&O.includes(n.tagName)&&(y.normal_mode&&N(i,y.normal_mode)&&(l.current="normal"),["normal","visual"].includes(l.current)&&(A(n,i),i.preventDefault()))};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[y]),null};export{D as A};
