name: PR Preview

on:
  pull_request:
    types: [labeled, closed]

jobs:
  pr-preview:
    if: contains(join(github.event.pull_request.labels.*.name, ','), 'pr-preview')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | BUN_VERSION="1.9.7" bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Install Deps
        run: bun install --frozen-lockfile

      - name: Determine action
        id: pr_action
        run: |
          if [ "${{ github.event.action }}" = "closed" ]; then
            echo "ACTION=close" >> $GITHUB_ENV
          else
            echo "ACTION=build" >> $GITHUB_ENV
          fi

      - name: Build Vite project and create ZIP
        if: env.ACTION == 'build'
        run: |
          bun run zip
          BASE_ZIP=$(ls .output/*.zip | head -n 1)
          SAFE_BRANCH_NAME=$(echo $GITHUB_HEAD_REF | tr '/' '-')
          ZIP_NAME="pr-preview-${SAFE_BRANCH_NAME}.zip"
          mkdir -p pr-previews
          mv "$BASE_ZIP" "pr-previews/$ZIP_NAME"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Deploy ZIP to GitHub Pages
        if: env.ACTION == 'build'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git checkout gh-pages || git checkout --orphan gh-pages
          git add pr-previews/$ZIP_NAME
          git commit -m "Add PR preview ZIP: $GITHUB_HEAD_REF" || echo "Nothing to commit"
          git push origin gh-pages --force

      - name: Add PR comment with download link
        if: env.ACTION == 'build'
        uses: actions/github-script@v7
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const base = {
              issue_number: context.issue.number,
              owner: owner,
              repo: repo,
            }

            const comments = await github.rest.issues.listComments(base);

            for (const comment of comments.data) {
              if (comment.body.includes("PRÁî®„ÅÆChrome Extensions„Åå„Éì„É´„Éâ„Åï„Çå„Åæ„Åó„Åü")) {
                await github.rest.issues.deleteComment({
                  owner,
                  repo,
                  comment_id: comment.id
                });
              }
            }

            const zipName = process.env.ZIP_NAME;
            const url = `https://${owner}.github.io/${repo}/pr-previews/${zipName}`;
            await github.rest.issues.createComment({
              ...base,
              body: `‚úÖ PRÁî®„ÅÆChrome Extensions„Åå„Éì„É´„Éâ„Åï„Çå„Åæ„Åó„Åüü¶ê\n[„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„ÅØ„Åì„Å°„Çâ](${url})`
            });
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          ZIP_NAME: ${{ env.ZIP_NAME }}

      - name: Remove ZIP on PR close
        if: env.ACTION == 'close'
        run: |
          SAFE_BRANCH_NAME=$(echo $GITHUB_HEAD_REF | tr '/' '-')
          ZIP_NAME="pr-preview-${SAFE_BRANCH_NAME}.zip"
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch origin gh-pages
          git checkout gh-pages
          rm -f pr-previews/$ZIP_NAME
          git add pr-previews/$ZIP_NAME
          git commit -m "Remove PR preview ZIP: $GITHUB_HEAD_REF" || echo "Nothing to commit"
          git push origin gh-pages --force
